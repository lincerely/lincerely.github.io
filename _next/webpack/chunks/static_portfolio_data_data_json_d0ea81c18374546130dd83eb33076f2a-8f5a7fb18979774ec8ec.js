__NEXT_REGISTER_CHUNK("static_portfolio_data_data_json_d0ea81c18374546130dd83eb33076f2a",function(){webpackJsonp([0],{360:function(e,t){e.exports=[{title:"Your Face Your Fate",image:"/static/images/works/your-face-your-fate.png",genre:["Machine learning","Computer Vision","Android","Dlib","OpenCV","libSVM"],brief:"Evaluate your fate through face reading with computer vision",detail:"Your Face Your Fate is a project to recognize face features through photos.\nThe concept of this project is from traditional Chinese fortune telling. It can predict the fortune and future of a person by the shape of his face, eyes, nose, mouth etc.\n Dlib is used to detect facial feature and libSVM is used to classify their genre.",github:"https://github.com/lincerely/Face-Reading"},{title:"Congestion",image:"/static/images/works/congestion.png",genre:["Game AI","Unity"],brief:"Pass through waves of crowd and find the exit",detail:"Exploratory project on Unity's Navigation Mesh.\nThe player need to pass though waves of ai, collect enough key to open the exit door.",build:"https://drive.google.com/open?id=0B1xR83aDHCcNbXJLaHBRNUpSTEU",link:"https://drive.google.com/open?id=0B1xR83aDHCcNbXJLaHBRNUpSTEU"},{title:"Red Cam Green Cam",image:"https://raw.githubusercontent.com/lincerely/Red-Cam-Green-Cam/master/docs/demo.gif",genre:["Raspberry Pi","Computer Vision","OpenCV","Hardware"],brief:"Play Red Light, Green Light with a camera bot",detail:"Motion-based game in light of the famous classic game Red Light, Green Light. The goal is to push the button next to the camera bot, without getting noticed by it.\n The magic behind is a python program which analysis the motion inside the camera view and response to it.\nMotion detection is achieved by comparing previous frame and current frame.",github:"https://github.com/lincerely/Red-Cam-Green-Cam",vimeo:"https://vimeo.com/247120163"},{title:"Dashgon",image:"/static/images/works/dashgon.png",vimeo:"https://vimeo.com/248351652",genre:["SDL2","C++"],brief:"Arcade PvP point collecting game",detail:"This project aim to understand the fudamental of 2d game development, by implementing scenes, entity, collision system through strict object-oriented design. Object pooling is used for the particle system.",gogs:"https://lincerely.duckdns.org/gogs/lincerely/Dashgon"},{title:"Pong-Q",image:"/static/images/works/pong.png",genre:["Python","Game AI","Machine learning"],brief:"AI learn to play pong with Q-learning",detail:"A weekend project, implements machine learning for Pong AI in Python. By using Q-learning method, the machine learning AI learns how to beat a traditional AI.",video:"/static/videos/pong.mp4",github:"https://github.com/lincerely/breakout-Q"},{title:"Duel!",image:"/static/images/works/duel.png",genre:["Kinect"],brief:"Experience the duel of cowboys using Kinect",detail:"At the beginning of each round, player required to make a coin throwing gesture. After hearing the coin drops, they need to turn around and shoot each other. Player who reacts faster win this round.\nAs the application is implemented using Kinect v1, there are no build-in gesture recognition method with machine learning. Instead, it is implemented with detecting the change of joint positions.",vimeo:"https://vimeo.com/194633610"},{title:"4386",image:"/static/images/works/4386.png",genre:["Unity","Game AI"],brief:"Unity game about prison breaking",detail:"You, No.4386 are a death row and you only have five days left. Find Keys to unlock exit while hide from the guards.\nThis is a game AI course assignment, which implemented a FSM with Unity's animator API to controll guard AIs' behaviors."},{title:"Seymour",image:"/static/images/works/seymour.png",genre:["Unity"],brief:"Seymour the dog is looking for someone...",detail:"A maze game made during GGJ2017. The topic is 'waves', so we figure out to use waves to detect the maze structure.\nThe waves are stimulated with particle system, it reveals hidden walls when they collides.",link:"http://globalgamejam.org/2017/games/seymour"},{title:"Backward Beginning",image:"/static/images/works/backwardBeginning.png",video:"/static/videos/backwardBeginning.mp4",genre:["Unity","Tool"],brief:"Developing tools for level designer",detail:"A story based puzzle game which has a gameplay similar to the traditional transport puzzle Sokoban.\nThis project features a node-based navigation system. This system could be divided into modules and componenets so the game designer could build levels and create character without knowing the code underneath."},{title:"Online Portfolio",image:"/static/images/works/portfolio.png",genre:["React","Next.js","Tool"],brief:"This site",gogs:"https://lincerely.duckdns.org/gogs/lincerely/portfolio",detail:"A data-driven work showcase, which use Next.js for server-side rendering and lazy loading."}]}})});